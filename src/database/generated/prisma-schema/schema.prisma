//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String   @id()
  created_at       DateTime @default(now()) @db.Timestamptz()
  updated_at       DateTime @updatedAt() @db.Timestamptz()
  tasks            Task[]
  scopes           Scope[]
  scope_list_order String[]

  @@map("users")
}

model Scope {
  id                      String    @id() @default(cuid())
  created_at              DateTime  @default(now()) @db.Timestamptz()
  updated_at              DateTime  @updatedAt() @db.Timestamptz()
  created_by_id           String
  created_by              User      @relation(fields: [created_by_id], references: [id], onDelete: Cascade)
  archived_at             DateTime? @db.Timestamptz()
  title                   String
  content                 String?
  tasks                   Task[]
  current_task_list_order String[]

  @@map("scopes")
}

model Task {
  id            String    @id() @default(cuid())
  created_at    DateTime  @default(now()) @db.Timestamptz()
  updated_at    DateTime  @updatedAt() @db.Timestamptz()
  created_by_id String
  created_by    User      @relation(fields: [created_by_id], references: [id], onDelete: Cascade)
  archived_at   DateTime? @db.Timestamptz()
  scope_id      String
  scope         Scope     @relation(fields: [scope_id], references: [id], onDelete: Cascade)
  title         String
  content       String?
  due_at        DateTime? @db.Timestamptz()
  deferred_to   DateTime? @db.Timestamptz()
  completed_at  DateTime? @db.Timestamptz()

  @@map("tasks")
}
